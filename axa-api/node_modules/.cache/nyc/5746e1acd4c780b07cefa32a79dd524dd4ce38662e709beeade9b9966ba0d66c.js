var cov_1wklea6lkl=function(){var path="C:\\Users\\alber\\Desktop\\AXA\\axa-api\\logic\\user\\retrieve\\index.spec.js";var hash="297e1ad73b28daf7a0af46cadaf0c4f60fd56014";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\Users\\alber\\Desktop\\AXA\\axa-api\\logic\\user\\retrieve\\index.spec.js",statementMap:{"0":{start:{line:1,column:0},end:{line:1,column:26}},"1":{start:{line:2,column:19},end:{line:2,column:34}},"2":{start:{line:3,column:15},end:{line:3,column:27}},"3":{start:{line:4,column:35},end:{line:4,column:54}},"4":{start:{line:6,column:26},end:{line:6,column:33}},"5":{start:{line:8,column:0},end:{line:65,column:2}},"6":{start:{line:9,column:4},end:{line:9,column:47}},"7":{start:{line:9,column:17},end:{line:9,column:46}},"8":{start:{line:13,column:4},end:{line:27,column:6}},"9":{start:{line:14,column:8},end:{line:14,column:34}},"10":{start:{line:15,column:8},end:{line:15,column:38}},"11":{start:{line:16,column:8},end:{line:16,column:51}},"12":{start:{line:17,column:8},end:{line:17,column:38}},"13":{start:{line:19,column:8},end:{line:19,column:31}},"14":{start:{line:20,column:8},end:{line:20,column:16}},"15":{start:{line:21,column:19},end:{line:21,column:63}},"16":{start:{line:22,column:8},end:{line:22,column:16}},"17":{start:{line:23,column:12},end:{line:23,column:37}},"18":{start:{line:30,column:4},end:{line:35,column:6}},"19":{start:{line:31,column:8},end:{line:31,column:16}},"20":{start:{line:32,column:19},end:{line:32,column:38}},"21":{start:{line:34,column:12},end:{line:34,column:33}},"22":{start:{line:64,column:4},end:{line:64,column:38}},"23":{start:{line:64,column:16},end:{line:64,column:37}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:8,column:34},end:{line:8,column:35}},loc:{start:{line:8,column:40},end:{line:65,column:1}},line:8},"1":{name:"(anonymous_1)",decl:{start:{line:9,column:11},end:{line:9,column:12}},loc:{start:{line:9,column:17},end:{line:9,column:46}},line:9},"2":{name:"(anonymous_2)",decl:{start:{line:13,column:15},end:{line:13,column:16}},loc:{start:{line:13,column:26},end:{line:27,column:5}},line:13},"3":{name:"(anonymous_3)",decl:{start:{line:30,column:41},end:{line:30,column:42}},loc:{start:{line:30,column:51},end:{line:35,column:5}},line:30},"4":{name:"(anonymous_4)",decl:{start:{line:64,column:10},end:{line:64,column:11}},loc:{start:{line:64,column:16},end:{line:64,column:37}},line:64}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0},b:{},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"297e1ad73b28daf7a0af46cadaf0c4f60fd56014"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();cov_1wklea6lkl.s[0]++;require('dotenv').config();const{expect}=(cov_1wklea6lkl.s[1]++,require('chai'));const retrieve=(cov_1wklea6lkl.s[2]++,require('.'));const{database,models:{User}}=(cov_1wklea6lkl.s[3]++,require('axa-data'));const{env:{DB_URL_TEST}}=(cov_1wklea6lkl.s[4]++,process);cov_1wklea6lkl.s[5]++;describe('logic - retrieve user',()=>{cov_1wklea6lkl.f[0]++;cov_1wklea6lkl.s[6]++;before(()=>{cov_1wklea6lkl.f[1]++;cov_1wklea6lkl.s[7]++;return database.connect(DB_URL_TEST);});let id,name,email,role,_id;cov_1wklea6lkl.s[8]++;beforeEach(async()=>{cov_1wklea6lkl.f[2]++;cov_1wklea6lkl.s[9]++;id=`id-${Math.random()}`;cov_1wklea6lkl.s[10]++;name=`name-${Math.random()}`;cov_1wklea6lkl.s[11]++;email=`email-${Math.random()}@domain.com`;cov_1wklea6lkl.s[12]++;role=`role-${Math.random()}`;cov_1wklea6lkl.s[13]++;await User.deleteMany();cov_1wklea6lkl.s[14]++;debugger;const user=(cov_1wklea6lkl.s[15]++,await User.create({id,name,email,role}));cov_1wklea6lkl.s[16]++;debugger;cov_1wklea6lkl.s[17]++;_id=user._id.toString();});cov_1wklea6lkl.s[18]++;it('should succeed on correct data',async()=>{cov_1wklea6lkl.f[3]++;cov_1wklea6lkl.s[19]++;debugger;const user=(cov_1wklea6lkl.s[20]++,await retrieve(_id));cov_1wklea6lkl.s[21]++;expect(user).to.exist;});/*     it('should throw an error with a wrong id',async () =>{
        try{
            await retrieve("5d5fe532b4f3f827e6fc64f8")

        }catch(error){
            expect(error).to.exist
            expect(error.message).to.equal(`User with id 5d5fe532b4f3f827e6fc64f8 does not exist.`)

        }
    })

    it('should fail on empty id', () =>
    expect(() =>
        retrieve( "")
    ).to.throw('id is empty or blank')
    )
    it('should fail on undefined id', () =>
        expect(() =>
            retrieve( undefined)
        ).to.throw(`id with value undefined is not a string`)
    )
    it('should fail on wrong id', () =>
    expect(() =>
        retrieve( 123)
    ).to.throw(`id with value 123 is not a string`)
) */cov_1wklea6lkl.s[22]++;after(()=>{cov_1wklea6lkl.f[4]++;cov_1wklea6lkl.s[23]++;return database.disconnect();});});