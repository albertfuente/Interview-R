var cov_sgcdv4srm=function(){var path="C:\\Users\\alber\\Desktop\\AXA\\axa-api\\logic\\policie\\register\\index.js";var hash="a3d8be53c9e63835af9bc40ad414ac1d7a1f204f";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\Users\\alber\\Desktop\\AXA\\axa-api\\logic\\policie\\register\\index.js",statementMap:{"0":{start:{line:1,column:16},end:{line:1,column:36}},"1":{start:{line:2,column:24},end:{line:2,column:43}},"2":{start:{line:20,column:1},end:{line:38,column:2}},"3":{start:{line:22,column:5},end:{line:22,column:29}},"4":{start:{line:23,column:5},end:{line:23,column:51}},"5":{start:{line:24,column:5},end:{line:24,column:35}},"6":{start:{line:25,column:5},end:{line:25,column:34}},"7":{start:{line:26,column:5},end:{line:26,column:51}},"8":{start:{line:27,column:5},end:{line:27,column:62}},"9":{start:{line:28,column:5},end:{line:28,column:41}},"10":{start:{line:30,column:5},end:{line:37,column:9}},"11":{start:{line:31,column:23},end:{line:31,column:50}},"12":{start:{line:33,column:9},end:{line:33,column:71}},"13":{start:{line:33,column:20},end:{line:33,column:71}},"14":{start:{line:35,column:9},end:{line:35,column:166}},"15":{start:{line:36,column:9},end:{line:36,column:23}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:20,column:16},end:{line:20,column:17}},loc:{start:{line:20,column:90},end:{line:38,column:2}},line:20},"1":{name:"(anonymous_1)",decl:{start:{line:30,column:12},end:{line:30,column:13}},loc:{start:{line:30,column:21},end:{line:37,column:6}},line:30}},branchMap:{"0":{loc:{start:{line:33,column:9},end:{line:33,column:71}},type:"if",locations:[{start:{line:33,column:9},end:{line:33,column:71}},{start:{line:33,column:9},end:{line:33,column:71}}],line:33}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},f:{"0":0,"1":0},b:{"0":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"a3d8be53c9e63835af9bc40ad414ac1d7a1f204f"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();const{validate}=(cov_sgcdv4srm.s[0]++,require('axa-utils'));const{models:{Policie}}=(cov_sgcdv4srm.s[1]++,require('axa-data'));/**
 * Registers a new policie 
 * 
 * @param {string} id - the id of the Policie
 * @param {number} amountInsured - the amountInsured of the Policie
 * @param {string} email - the email of the Client
 * @param {string} inceptionDate - the inceptionDate of the Policie
 * @param {boolean} installmentPayment - the installmentPayment of the Policie
 * @param {string} clientId - the id of the Client
 * 
 * @throws {Error} - if Policie already exists
 * 
 * @returns {Object} - returns the Policie
 */cov_sgcdv4srm.s[2]++;module.exports=function(id,amountInsured,email,inceptionDate,installmentPayment,clientId){cov_sgcdv4srm.f[0]++;cov_sgcdv4srm.s[3]++;validate.string(id,'id');cov_sgcdv4srm.s[4]++;validate.number(amountInsured,'amountInsured');cov_sgcdv4srm.s[5]++;validate.string(email,'email');cov_sgcdv4srm.s[6]++;validate.email(email,'email');cov_sgcdv4srm.s[7]++;validate.string(inceptionDate,'inceptionDate');cov_sgcdv4srm.s[8]++;validate.boolean(installmentPayment,'installmentPayment');cov_sgcdv4srm.s[9]++;validate.string(clientId,'clientId');cov_sgcdv4srm.s[10]++;return(async()=>{cov_sgcdv4srm.f[1]++;const policie=(cov_sgcdv4srm.s[11]++,await Policie.findOne({id}));cov_sgcdv4srm.s[12]++;if(policie){cov_sgcdv4srm.b[0][0]++;cov_sgcdv4srm.s[13]++;throw Error(`policie with id ${id} already exsits`);}else{cov_sgcdv4srm.b[0][1]++;}cov_sgcdv4srm.s[14]++;await Policie.create({id:id,amountInsured:amountInsured,email:email,inceptionDate:inceptionDate,installmentPayment:installmentPayment,clientId:clientId});cov_sgcdv4srm.s[15]++;return policie;})();};