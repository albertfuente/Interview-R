var cov_194kpglx73=function(){var path="C:\\Users\\alber\\Desktop\\AXA\\axa-api\\logic\\user\\register\\index.js";var hash="6268233948fe76376e6df1d9ddb9350c0c140799";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\Users\\alber\\Desktop\\AXA\\axa-api\\logic\\user\\register\\index.js",statementMap:{"0":{start:{line:1,column:19},end:{line:1,column:39}},"1":{start:{line:2,column:25},end:{line:2,column:44}},"2":{start:{line:17,column:0},end:{line:35,column:1}},"3":{start:{line:19,column:4},end:{line:19,column:29}},"4":{start:{line:20,column:4},end:{line:20,column:33}},"5":{start:{line:21,column:4},end:{line:21,column:38}},"6":{start:{line:22,column:4},end:{line:22,column:37}},"7":{start:{line:23,column:4},end:{line:23,column:33}},"8":{start:{line:25,column:4},end:{line:32,column:8}},"9":{start:{line:26,column:20},end:{line:26,column:49}},"10":{start:{line:28,column:12},end:{line:28,column:77}},"11":{start:{line:28,column:22},end:{line:28,column:77}},"12":{start:{line:30,column:12},end:{line:30,column:77}},"13":{start:{line:31,column:12},end:{line:31,column:23}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:17,column:17},end:{line:17,column:18}},loc:{start:{line:17,column:49},end:{line:35,column:1}},line:17},"1":{name:"(anonymous_1)",decl:{start:{line:25,column:11},end:{line:25,column:12}},loc:{start:{line:25,column:20},end:{line:32,column:5}},line:25}},branchMap:{"0":{loc:{start:{line:28,column:12},end:{line:28,column:77}},type:"if",locations:[{start:{line:28,column:12},end:{line:28,column:77}},{start:{line:28,column:12},end:{line:28,column:77}}],line:28}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},f:{"0":0,"1":0},b:{"0":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"6268233948fe76376e6df1d9ddb9350c0c140799"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();const{validate}=(cov_194kpglx73.s[0]++,require('axa-utils'));const{models:{User}}=(cov_194kpglx73.s[1]++,require('axa-data'));/**
 * Registers a new user
 * 
 * @param {string} id - the id of the Client
 * @param {string} name - the name of the Client
 * @param {string} email - the email of the Client
 * @param {string} role - the role of the Client
 * 
 * @throws {Error} - if User already exists
 * 
 * @returns {Object} - returns the Client
 */cov_194kpglx73.s[2]++;module.exports=function(id,name,email,role){cov_194kpglx73.f[0]++;cov_194kpglx73.s[3]++;validate.string(id,'id');cov_194kpglx73.s[4]++;validate.string(name,'name');cov_194kpglx73.s[5]++;validate.string(email,'username');cov_194kpglx73.s[6]++;validate.email(email,'username');cov_194kpglx73.s[7]++;validate.string(role,'role');cov_194kpglx73.s[8]++;return(async()=>{cov_194kpglx73.f[1]++;const user=(cov_194kpglx73.s[9]++,await User.findOne({email}));cov_194kpglx73.s[10]++;if(user){cov_194kpglx73.b[0][0]++;cov_194kpglx73.s[11]++;throw Error(`user with e-mail ${email} already exists`);}else{cov_194kpglx73.b[0][1]++;}cov_194kpglx73.s[12]++;await User.create({id:id,name:name,email:email,role:role});cov_194kpglx73.s[13]++;return user;})();};